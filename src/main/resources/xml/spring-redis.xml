<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		"
	default-lazy-init="false">

	<!-- redis 配置,也可以把配置挪到properties配置文件中,再读取 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="127.0.0.1" name="host" type="java.lang.String" />
		<constructor-arg index="2" value="2185" name="port" type="int" />
		<constructor-arg index="3" value="5000" name="timeout" type="int" />
	</bean> 
	
	<!-- 配置JedisPoolConfig实例 -->  
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxTotal" value="${redis.maxActive}" />  
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>
      
    <!-- 配置JedisConnectionFactory -->  
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${redis.host}"/>  
        <property name="port" value="${redis.port}"/>  
        <property name="password" value="${redis.pass}"/>  
        <!-- <property name="database" value="${redis.dbIndex}"/>  --> 
        <property name="poolConfig" ref="jedisPoolConfig"/>  
    </bean>
      
    <!-- 配置RedisTemplate -->  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="jedisConnectionFactory"/>  
    </bean>
      
    <!-- 配置RedisCacheManager -->  
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">  
        <constructor-arg name="redisOperations" ref="redisTemplate" />  
        <property name="defaultExpiration" value="${redis.expiration}"/>  
    </bean>
    
    <!-- 自定义redis可以的生成规则 -->
    <bean id="redisKeyGenerator" class="com.sirding.core.redis.RedisKeyGenerator"/>
    <cache:annotation-driven 
		cache-manager="redisCacheManager" 
		key-generator="redisKeyGenerator"/>
		
    <!-- 配置RedisCacheConfig  -->
    <!-- <bean id="redisCacheConfig" class="com.sirding.core.redis.RedisCacheConfig">  
        <constructor-arg ref="jedisConnectionFactory" />
        <constructor-arg ref="redisTemplate" />
        <constructor-arg ref="redisCacheManager" />
        <constructor-arg ref="redisKeyGenerator" />
    </bean> --> 

</beans>