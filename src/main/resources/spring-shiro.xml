<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<description>
		shiro
	</description>
	<!-- ================= 缓存配置 ========start============== -->
	<!-- redis 的缓存 -->
	<bean id="jedisManager" class="com.sirding.core.redis.JedisManager">
	    <property name="jedisPool" ref="jedisPool"/>
	</bean>
	
	<!-- 使用redis缓存 -->
	<bean id="custShiroCacheManager" class="com.sirding.core.security.shiro.cache.CustShiorCacheManager">
	    <property name="jedisManager" ref="jedisManager"/>
	</bean>
	
	<!-- ================= 缓存配置 ========end============== -->
	
	
	<!-- ================= session管理配置 ========end============== -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <description>自定义session管理</description>
	    <property name="globalSessionTimeout" value="1800000" />
	    <property name="sessionIdCookie" ref="sessionIdCookie" />
	    <!-- 自定义session监听器 -->
	    <property name="sessionListeners">
	    	<util:list>
	    		<bean class="com.sirding.core.security.shiro.listener.CustSessionListener"/>
	    	</util:list>
	    </property>
	    <!-- 是否开启 检测，默认开启 -->
	  	<property name="sessionValidationSchedulerEnabled" value="true"/>
	    <!-- 间隔多少时间检查，不配置是60分钟 -->	
	  	<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
	  	<!-- 是否删除无效的，默认也是开启 -->
	  	<property name="deleteInvalidSessions" value="true"/>
	  	<property name="sessionDAO" ref="customShiroSessionDAO"/>
	</bean>
	
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<description>基于quart实现的会话验证调度器</description>
		 <!-- 间隔多少时间检查，不配置是60分钟 -->
	     <property name="interval" value="3600000"/>
	     <property name="sessionManager" ref="sessionManager"/>
	</bean>
	
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <description>会话Cookie模板</description>
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/><!-- cookie有效时间（s）-1:浏览器关闭是就清楚cookie -->
    </bean>
    
    <bean id="custShiroSessionDAO" class="com.sirding.core.security.shiro.session.CustomShiroSessionDAO">
	    <description>session CURD管理</description>
	    <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	
	<bean id="customSessionManager" class="com.sirding.core.security.shiro.session.CustomSessionManager">
		<description>自定义管理user对应session管理</description>
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
		<property name="customShiroSessionDAO" ref="customShiroSessionDAO"/>
	</bean>
	
	<bean id="jedisShiroSessionRepository" class="com.sirding.core.security.shiro.session.JedisShiroSessionRepository" >
		 <property name="jedisManager" ref="jedisManager"/>
	</bean>
	<!-- ================= session管理配置 ========end============== -->

	
	<!-- ================= remember功能配置 ========start============== -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <description>
       		rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）
        </description>
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
	<!-- ================= remember功能配置 ========end============== -->

	
	<!-- ================= 核心配置 ========start============== -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <property name="sessionManager" ref="sessionManager"/>
	    <property name="cacheManager" ref="custShiroCacheManager"/>
	    <property name="realm" ref="myShiroRealm"/>
	</bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <description>
	    	shirofilter要同web.xml中的filter的name对应
	    </description>
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/auth/login.jsp"/>
	    <property name="successUrl" value="/shiro/home.jsp"/>
	    <property name="unauthorizedUrl" value="/auth/unauthorized.jsp"/>
	    <property name="filters">
	        <util:map>
	            <entry key="myShiorFilter" value-ref="myShiroFilter"/>
	        </util:map>
	    </property>
	    <property name="filterChainDefinitions">
	    	<value>
	    		/auth/** = anon
	    		/shiro/** = authc
	    		/admin/** = authc, roles[admin]
	            /docs/** = authc, perms[document:read]
	            /user/** = authc, roles[admin], perms[user:query]
	            /** = authc
	    	</value>
	    </property>
	</bean>

	<bean id="myShiroFilter" class="com.sirding.core.security.shiro.filter.MyShiroFilter"/>
	
	<!-- 自定义权限控制 -->	
	<bean id="myShiroRealm" class="com.sirding.core.security.shiro.realm.MyShiroRealm2" />
	
	<!-- Shiro生命周期处理器-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<!-- ================= 核心配置 ========start============== -->
</beans>
