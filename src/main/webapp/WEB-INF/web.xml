<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name>java-sm</display-name>
<!-- ;classpath:spring-oauth2.xml -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:spring-core.xml;
			classpath:spring-mybatis.xml;
			classpath:spring-shiro.xml;
			classpath:spring-redis.xml
		</param-value>
	</context-param>

	<!-- 配置使用shiro start -->
	<!-- 使用自定义的方式创建shiro运行所需要的WebEnvironment instance，可以替代EnvironmentLoaderListener， 
		   默认优先查找WEB-INF/shiro.ini或是classpath:shiro.ini,如果文件名称改变可以在shiroConfigLocations中进行添加
	 -->
	<!-- 
	<context-param>
    	<param-name>shiroEnvironmentClass</param-name>
	    <param-value>com.foo.bar.shiro.MyWebEnvironment</param-value>
	</context-param> 
	<context-param>
	    <param-name>shiroConfigLocations</param-name>
	    <param-value>YOUR_RESOURCE_LOCATION_HERE</param-value>
	</context-param>
	-->

	<!-- <listener>
	    <listener-class>org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class>
	</listener>
	
	<filter>
	    <filter-name>ShiroFilter</filter-name>
	    <filter-class>org.apache.shiro.web.servlet.ShiroFilter</filter-class>
	</filter>
	
	<filter-mapping>
	    <filter-name>ShiroFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher> 
	    <dispatcher>FORWARD</dispatcher> 
	    <dispatcher>INCLUDE</dispatcher> 
	    <dispatcher>ERROR</dispatcher>
	</filter-mapping> -->
	<!-- 配置使用shiro end -->
	
	
	<!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml -->
	<!-- <filter>
	    <filter-name>shiroFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	    该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理
	    <init-param>
	        <param-name>targetFilterLifecycle</param-name>
	        <param-value>true</param-value>
	    </init-param>
	</filter>
	
	Make sure any request you want accessible to Shiro is filtered. /* catches all
	requests.  Usually this filter mapping is defined first (before all others) to
	ensure that Shiro works in subsequent filters in the filter chain:            
	<filter-mapping>
	    <filter-name>shiroFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
	
	<filter>
		<description>统一编码</description>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- <filter> <description>延长hibernate的session作用的范围（仅用于hibernate，在延迟加载情况下）</description> 
		<filter-name>openSessionInViewFilter</filter-name> <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class> 
		<init-param> <param-name>singleSession</param-name> <param-value>true</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>openSessionInViewFilter</filter-name> 
		<url-pattern>*.do</url-pattern> </filter-mapping> -->

	<!-- Spring security filter 
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->

	<listener>
		<description>初始化Spring框架</description>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<description>防止javabean导致的spring内存溢出监听器</description>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<description>初始化项目运行需要的参数</description>
		<listener-class>com.sirding.core.listener.InitListener</listener-class>
	</listener>
	
	
	<servlet>
		<description>加载SpringMVC配置信息</description>
		<servlet-name>springMvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<description>spring mvc 配置文件</description>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>

	<!-- HttpSession的失效时间 -->
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>

	<!-- <error-page> <error-code>404</error-code> <location>/error/404.jsp</location> 
		</error-page> <error-page> <error-code>500</error-code> <location>/error/500.jsp</location> 
		</error-page> -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
